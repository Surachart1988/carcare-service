version: '3.8'

services:
  sql-server-db:
    container_name: sql-server-db
    image: mcr.microsoft.com/mssql/server
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "P@ssw0rd"
      ACCEPT_EULA: "Y"
    networks: 
      - backend
    volumes:
      #- $PWD/data:/home/sql/data
      - c:\data:/home/sql/data
  redis-cache:
    container_name: redis-server
    image: redis:6.0
    command: redis-server --requirepass P@ssw0rd
    ports:
      - "6379:6379"
    volumes:
      #- $PWD/redis-data:/var/lib/redis
      #- $PWD/redis.conf:/usr/local/etc/redis/redis.conf
      - c:\data\redis\data:/var/lib/redis
      - c:\data\redis\redis.conf:/usr/local/etc/redis/redis.conf
    environment:
     - REDIS_REPLICATION_MODE=master
    networks: 
      - backend
  api:
    image: cps-api
    build:
      context: .
      dockerfile: Csp.Api/Dockerfile.production
    ports:
      - 5000:5000
#      - 5001:5001
    links: 
      - sql-server-db
    networks: 
      - backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      #- ASPNETCORE_HTTPS_PORT=5001
      #- ASPNETCORE_Kestrel__Certificates__Default__Password=P@ssw0rd
      #- ASPNETCORE_Kestrel__Certificates__Default__Path=/https/cert.pfx
    volumes:
      # - ${USERPROFILE}/.aspnet/https:/https/ 
      #- ./cert/:/https/ 
      - /etc/localtime:/etc/localtime:ro
      #- $PWD/data/logs:/home/sql/data/logs
      - c:\data\logs:/home/data/logs
networks:
  backend:
    driver: "bridge"

    